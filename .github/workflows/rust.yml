name: Rust

on:
  push:
    tags:
      - "v*.*.*"
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            file_name: porkbun-cli-${{ github.ref_name }}-linux-amd64
            file_ext: .tar.gz
            flags: ''
          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest
            file_name: porkbun-cli-${{ github.ref_name }}-linux-amd64-musl
            file_ext: .tar.gz
            flags: RUSTFLAGS='-C target-feature=+crt-static'

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - if: ${{ contains(matrix.target, '-musl') }}
        run: sudo apt-get install musl-tools musl -y 
      - run: cargo check
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
      - uses: dtolnay/rust-toolchain@stable
        with:
            targets: ${{ matrix.target }}
            toolchain: stable
      - name: Build
        run: ${{ matrix.flags }} cargo build --release --target ${{ matrix.target }}
 
      - name: Calculate checksum and rename binary
        if: contains(matrix.target, 'windows') == false
        shell: bash
        run: |
          cd target/${{ matrix.target }}/release
          chmod +x porkbun-rs
          # tar -zcvf ${{ matrix.file_name }}.tar.gz porkbun-rs
          # echo $(shasum -a 256 ${{ matrix.file_name }}.tar.gz | cut -f1 -d' ') > ${{ matrix.file_name }}.tar.gz.sha256sum

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.file_name }}.zip
          # path: target/${{ matrix.target }}/release/${{ matrix.file_name }}${{ matrix.file_ext }}
          path: target/${{ matrix.target }}/release/porkbun-rs
          
      # - name: Upload checksum of artifacts
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: ${{ matrix.file_name }}.sha256sum
          # path: target/${{ matrix.target }}/release/${{ matrix.file_name }}${{ matrix.file_ext }}.sha256sum
          # path: target/${{ matrix.target }}/release/porkbun-rs

  release:
    name: Release artifacts
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4

      - name: Publish release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.CUSTOM_GITHUB_TOKEN }}
        with:
          name: "Release ${{ github.ref_name }}"
          generate_release_notes: true
